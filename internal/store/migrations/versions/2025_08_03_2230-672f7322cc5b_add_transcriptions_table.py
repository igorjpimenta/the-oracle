"""add transcriptions table

Revision ID: 672f7322cc5b
Revises: b408d4be08b6
Create Date: 2025-08-03 22:30:30.065559+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '672f7322cc5b'
down_revision: Union[str, None] = 'b408d4be08b6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transcriptions',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('session_id', sa.String(length=255), nullable=False),
    sa.Column('audio_file_id', sa.String(length=255), nullable=False, comment='Nyxen media file ID'),
    sa.Column('original_filename', sa.String(length=500), nullable=False),
    sa.Column('transcription_text', sa.Text(), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=False, comment='Detected or specified language (en, es, etc.)'),
    sa.Column('confidence_score', sa.Float(), nullable=True, comment='Transcription confidence score'),
    sa.Column('duration_seconds', sa.Float(), nullable=True, comment='Audio duration in seconds'),
    sa.Column('audio_size_bytes', sa.Integer(), nullable=True, comment='Audio file size in bytes'),
    sa.Column('model', sa.String(length=50), nullable=False, comment='Model used for transcription'),
    sa.Column('processing_time_seconds', sa.Float(), nullable=True, comment='Time taken to process the transcription'),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Additional metadata like chunks, segments, etc.'),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transcriptions')
    # ### end Alembic commands ###
