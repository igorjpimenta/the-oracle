# Application-only Dockerfile (no Redis or PostgreSQL)
FROM --platform=linux/amd64 python:3.12-slim

# Set the working directory inside the container
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    curl \
    ffmpeg \
    && rm -rf /var/lib/apt/lists/*

# Copy dependency files first for better Docker layer caching
COPY Pipfile Pipfile.lock ./

# Set environment variable for pipenv
ENV PIPENV_VENV_IN_PROJECT=1

# Install Python dependencies
RUN pip install --upgrade pip && \
    pip install pipenv && \
    pipenv install --deploy --system

# Copy application code
COPY app/ ./app/
COPY scripts/ ./scripts/
COPY internal/ ./internal/

# Create non-root user for security
RUN groupadd -r appuser && \
    useradd -r -g appuser -d /app -s /sbin/nologin appuser && \
    chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose the port that the FastAPI app will run on
EXPOSE 4000

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:4000/health || exit 1

# Environment variables
ENV PYTHONPATH=/app

# Run the application
CMD ["python", "-m", "uvicorn", "app.api:app", "--host", "0.0.0.0", "--port", "4000"]
